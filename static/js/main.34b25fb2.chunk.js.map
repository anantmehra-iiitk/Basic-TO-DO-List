{"version":3,"sources":["components/CourseGoals/CourseGoalItem/CourseGoalItem.js","components/CourseGoals/CourseGoalList/CourseGoalList.js","components/UI/Button/Button.js","components/CourseGoals/CourseInput/CourseInput.js","App.js","index.js"],"names":["CourseGoalItem","props","className","onClick","onDelete","id","children","CourseGoalList","items","map","goal","onDeleteItem","text","Button","type","CourseInput","useState","enteredValue","setEnteredValue","isValid","setIsValid","onSubmit","event","preventDefault","trim","length","onAddGoal","onChange","target","value","App","courseGoals","setCourseGoals","content","style","textAlign","goalId","prevGoals","filter","enteredText","updatedGoals","unshift","Math","random","toString","ReactDOM","render","document","getElementById"],"mappings":"gUAmBeA,EAfQ,SAAAC,GAQrB,OACE,oBAAIC,UAAU,YAAYC,QANN,WAEpBF,EAAMG,SAASH,EAAMI,KAIrB,SACGJ,EAAMK,YCOEC,G,MAhBQ,SAAAN,GACrB,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAMO,MAAMC,KAAI,SAAAC,GAAI,OACnB,cAAC,EAAD,CAEEL,GAAIK,EAAKL,GACTD,SAAUH,EAAMU,aAHlB,SAKGD,EAAKE,MAJDF,EAAKL,WCELQ,G,MARA,SAAAZ,GACb,OACE,wBAAQa,KAAMb,EAAMa,KAAMZ,UAAU,SAASC,QAASF,EAAME,QAA5D,SACGF,EAAMK,aC+BES,G,MAjCK,SAACd,GACnB,MAAwCe,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAoBA,OACE,uBAAMC,SAXkB,SAACC,GACzBA,EAAMC,iBAE6B,IAA/BN,EAAaO,OAAOC,OAIxBxB,EAAMyB,UAAUT,GAHdG,GAAW,IAOb,UACE,sBAAKlB,UAAS,uBAAmBiB,EAAsB,GAAZ,WAA3C,UACE,4CACA,uBAAOL,KAAK,OAAOa,SAtBM,SAACL,GAE1BA,EAAMM,OAAOC,MAAML,OAAOC,OAAS,GACrCL,GAAW,GAEbF,EAAgBI,EAAMM,OAAOC,aAmB3B,cAAC,EAAD,CAAQf,KAAK,SAAb,2BCuBSgB,G,MAlDH,WACV,MAAsCd,mBAAS,CAC7C,CAAEJ,KAAM,IAAKP,GAAI,MACjB,CAAEO,KAAM,IAAKP,GAAI,QAFnB,mBAAO0B,EAAP,KAAoBC,EAApB,KAoBIC,EACF,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,4CASF,OANIJ,EAAYN,OAAS,IACvBQ,EACE,cAAC,EAAD,CAAgBzB,MAAOuB,EAAapB,aAbd,SAAAyB,GACxBJ,GAAe,SAAAK,GAEb,OADqBA,EAAUC,QAAO,SAAA5B,GAAI,OAAIA,EAAKL,KAAO+B,YAgB5D,gCACE,yBAAS/B,GAAG,YAAZ,SACE,cAAC,EAAD,CAAaqB,UA5BI,SAAAa,GACrBP,GAAe,SAAAK,GACb,IAAMG,EAAY,YAAOH,GAEzB,OADAG,EAAaC,QAAQ,CAAE7B,KAAM2B,EAAalC,GAAIqC,KAAKC,SAASC,aACrDJ,UA0BP,yBAASnC,GAAG,QAAZ,SACG4B,SCrCTY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.34b25fb2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './CourseGoalItem.css';\r\n\r\nconst CourseGoalItem = props => {\r\n  // const [deleteText, setDeleteText] = useState('');\r\n\r\n  const deleteHandler = () => {\r\n    // setDeleteText('(Deleted!)');\r\n    props.onDelete(props.id);\r\n  };\r\n\r\n  return (\r\n    <li className=\"goal-item\" onClick={deleteHandler}>\r\n      {props.children}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CourseGoalItem;\r\n","import React from 'react';\r\n\r\nimport CourseGoalItem from '../CourseGoalItem/CourseGoalItem';\r\nimport './CourseGoalList.css';\r\n\r\nconst CourseGoalList = props => {\r\n  return (\r\n    <ul className=\"goal-list\">\r\n      {props.items.map(goal => (\r\n        <CourseGoalItem\r\n          key={goal.id}\r\n          id={goal.id}\r\n          onDelete={props.onDeleteItem}\r\n        >\r\n          {goal.text}\r\n        </CourseGoalItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CourseGoalList;\r\n","import React from 'react';\n\nimport './Button.css';\n\nconst Button = props => {\n  return (\n    <button type={props.type} className=\"button\" onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\r\n\r\nimport Button from \"../../UI/Button/Button\";\r\nimport \"./CourseInput.css\";\r\n\r\nconst CourseInput = (props) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const goalInputChangeHandler = (event) => {\r\n    //reset functionality\r\n    if (event.target.value.trim().length > 0) {\r\n      setIsValid(true);\r\n    }\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    // we need to check whether something valid was enterd or not / feedback too\r\n    if (enteredValue.trim().length === 0) {\r\n      setIsValid(false);\r\n      return; // cant add empty goal\r\n    }\r\n    props.onAddGoal(enteredValue);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      <div className={`form-control ${!isValid ? 'invalid' : ''}` }>\r\n        <label>To Do :</label>\r\n        <input type=\"text\" onChange={goalInputChangeHandler} />\r\n      </div>\r\n      <Button type=\"submit\">Add Task</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CourseInput;\r\n","import React, { useState } from 'react';\r\n\r\nimport CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\r\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [courseGoals, setCourseGoals] = useState([\r\n    { text: '1', id: 'g1' },\r\n    { text: '2', id: 'g2' }\r\n  ]);\r\n\r\n  const addGoalHandler = enteredText => {\r\n    setCourseGoals(prevGoals => {\r\n      const updatedGoals = [...prevGoals];\r\n      updatedGoals.unshift({ text: enteredText, id: Math.random().toString() });\r\n      return updatedGoals;\r\n    });\r\n  };\r\n\r\n  const deleteItemHandler = goalId => {\r\n    setCourseGoals(prevGoals => {\r\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\r\n      return updatedGoals;\r\n    });\r\n  };\r\n\r\n  let content = (\r\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\r\n  );\r\n\r\n  if (courseGoals.length > 0) {\r\n    content = (\r\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section id=\"goal-form\">\r\n        <CourseInput onAddGoal={addGoalHandler} />\r\n      </section>\r\n      <section id=\"goals\">\r\n        {content}\r\n        {/* {courseGoals.length > 0 && (\r\n          <CourseGoalList\r\n            items={courseGoals}\r\n            onDeleteItem={deleteItemHandler}\r\n          />\r\n        ) // <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\r\n        } */}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}